@page "/hotel-room/create"
@page "/hotel-room/edit/{Id:int}"
@using Models
@using Business.Repository.IRepository
@inject IHotelRoomRepository HotelRoomRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
<div class="row mt-2 mb-5">
    <h3 class="card-title text-info md-3 ml-1 col-12">@Title Hotel Room</h3>
    <div class="card col-6">
        <div class="card-body">
            <EditForm Model="HotelRoomModel" OnValidSubmit="HandelHotelRoomUpsert">
                <DataAnnotationsValidator/>
                @*<ValidationSummary/>*@
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="HotelRoomModel.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>HotelRoomModel.Name"/>
                </div>
                <div class="form-group">
                    <label>Occupancy</label>
                    <InputNumber @bind-Value="HotelRoomModel.Occupancy" class="form-control"></InputNumber>
                    <ValidationMessage For="()=>HotelRoomModel.Occupancy" />
                </div>
                <div class="form-group">
                    <label>Regular Rate</label>
                    <InputNumber @bind-Value="HotelRoomModel.RegularRate" class="form-control"></InputNumber>
                    <ValidationMessage For="()=>HotelRoomModel.RegularRate" />
                </div>
                <div class="form-group">
                    <label>Square Feet</label>
                    <InputText @bind-Value="HotelRoomModel.SqFt" class="form-control"></InputText>
                </div>
                <div class="form-group">
                    <label>Details</label>
                    <InputTextArea @bind-Value="HotelRoomModel.Details" class="form-control"></InputTextArea>
                </div>
                <div class="form-group">
                    <InputFile OnChange="HandleImageUpload" multiple></InputFile>
                </div>
                <div class="form-group">
                    <button class="btn btn-primary">@Title Room</button>
                    <NavLink href="hotel-room" class="btn btn-secondary">Back to Index</NavLink>
                </div>

            </EditForm>
        </div>
    </div>

</div>

@code {

    [Parameter]
    public int? Id { get; set; }

    private HotelRoomDTO HotelRoomModel { get; set; } = new HotelRoomDTO();
    private string Title { get; set; } = "Create";

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            //updating
            Title = "Update";
            HotelRoomModel = await HotelRoomRepository.GetHotelRoom(Id.Value);

        }
        else
        {
            HotelRoomModel = new HotelRoomDTO();
            //creating
        }
    }

    private async Task HandelHotelRoomUpsert()
    {

        var roomDetailsByName = await HotelRoomRepository.IsRoomUnique(HotelRoomModel.Name, HotelRoomModel.Id);

        if (roomDetailsByName != null)
        {
            await JsRuntime.ToasterError("Room name already exist");
            return;
        }

        try
        {
            if (HotelRoomModel.Id != 0 && Title == "Update")
            {
                // this is update
                var updateResults = await HotelRoomRepository.UpdateHotelRoom(HotelRoomModel.Id, HotelRoomModel);
                await JsRuntime.ToasterSeccess("Hotel Room Update Successfully");
            }
            else
            {
                // new create room
                var createdResult = await HotelRoomRepository.CreateHotelRoom(HotelRoomModel); //pass DTO in form created to CreateHotelRoom method
                await JsRuntime.ToasterSeccess("Hotel Room Created Successfully");
            }

        }
        catch (Exception ex)
        {

            //log exceptoins
        }

            NavigationManager.NavigateTo("hotel-room");

       

    }

    private async Task HandleImageUpload()
        {

        }

}
